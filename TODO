Ideas for future development.

Hint giving interface
=====================

make sure puzzle has unique solution (hints don't make sense if solution is
non-unique)

compute unique solution and save order the cells are filled along with
constraint column id and number of candidates

    TODO: dlx: add a version of exact_cover which also populates arrays
    parallel to the solution array recording the constraint column id of each
    row when it was picked and the number of other rows in that column at the
    time

    TODO: sudoku: add a solver interface that returns not just the solution,
    but also all of the above extra information

    TODO: come up with a data structure to put in the header file for passing
    such info

any time user requests a hint, give the first cell the algorithm chose that is
not in the user's board

Far future
==========

curses interface: see curses.mockup.txt;

    TODO: finish designing the visual look

interface capabilities

    * fill cell
    * undo
    * undo (clear) all
    * new puzzle (clear entire board)
    * set givens
      * test puzzle validity and solve
      * begin undo history
    * provide hint

hints
    * forced move hints
      * cell constraint: highlight cell with only one candidate
      * row constraint: highlight row, display number
      * col constraint: hilight column, display number
      * region constraint: highlight region, display number
    * guess hints
      * cell constraint: highlight cell, display possibilities
      * row constraint: highlight row, display number, highlight possible cells
      * col constraint: highlight col, display number, highlight possible cells
      * region constraint: highlight region, display number, highlight possible cells

keys

    * up, down, left, right: hjkl
    * 1 - 9 : 1-9
    * undo: u
    * redo: r
    * erase cell: x, d, ., space
    * undo all: c
    * clear all: C
    * refresh screen: ^L
    * hint: h
    * go to hint location: h
    * go to next cell: space
    * fill hint: H (for lazy people and guess hints)
    * solve everything: S
    * quit: q
    * set givens: <enter>
    * display keys: ?
